% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/extraction_logs.R
\name{extract_table}
\alias{extract_table}
\title{Extracts a table}
\usage{
extract_table(connection, table, selection = NULL)
}
\arguments{
\item{connection}{An object that inherits from the \code{dbConnect()} function.}

\item{table}{A string indicating which table you want to extract the data from.}

\item{selection}{A string indicating the condition you want to use to select lines in the table (optional). \code{NULL} is the default value, if nothing is specified the entire table is returned.}
}
\value{
The dataset which was the subject of the extraction, is returned as a data.table object.
}
\description{
Performs SQL query to extract a table from a database and can select the lines by using a condition (optional).
}
\note{
It is important to leave spaces in the condition as the string is splitted on this pattern. Look at the next section for examples of valid conditions.
}
\examples{
## Say for example you want to track the activities from the
## Datastorm user in the log table this is how you are going to proceed :

mydb <- DBI::dbConnect(MySQL(), user=username, password=mdp,dbname=nom_base, host=port_hote)
condition <- "userid = 46501"
log_datastorm <- extract_table_by_userid(mydb,"mdl_log",condition)

## Now you want to extract the logs
## since 01/08/2017, this is the code you must run :

condition <- "time >= '2017-08-01'"
logs2015 <- extract_table(mydb,"mdl_log",condition)

## Or you just want every log from the start of the period :

logs <- extract_table(mydb,"mdl_log")
}

